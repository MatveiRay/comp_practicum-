/*

Райко Матвей Витальевич НБИбд-03-23

Лабораторная 2, Билет 23, Задание 1

1.Даны три вектора на плоскости, координаты которых определены случайным образом. 
Найти их длины, найти попарно углы между ними, найти попарно сумму и разность векторов,
выяснить вопрос о том,что есть ли параллельные среди них.

*/

#include <iostream>
#include <cmath>
#include <cstdlib>
#include <ctime>

struct Vector2D {
    double x, y;
};

Vector2D generateRandomVector() {
    return { static_cast<double>(rand() % 21 - 10), static_cast<double>(rand() % 21 - 10) };
}

double length(const Vector2D& v) {
    return sqrt(v.x * v.x + v.y * v.y);
}

double angleBetween(const Vector2D& v1, const Vector2D& v2) {
    double dot = v1.x * v2.x + v1.y * v2.y;
    double len1 = length(v1), len2 = length(v2);
    return acos(dot / (len1 * len2)) * 180.0 / M_PI;
}

Vector2D add(const Vector2D& v1, const Vector2D& v2) {
    return { v1.x + v2.x, v1.y + v2.y };
}

Vector2D subtract(const Vector2D& v1, const Vector2D& v2) {
    return { v1.x - v2.x, v1.y - v2.y };
}

bool areParallel(const Vector2D& v1, const Vector2D& v2) {
    return (v1.x * v2.y - v1.y * v2.x) == 0;
}

int main() {
    srand(time(0)); // Инициализация генератора случайных чисел

    // Генерация трех случайных векторов
    Vector2D v1 = generateRandomVector();
    Vector2D v2 = generateRandomVector();
    Vector2D v3 = generateRandomVector();

    // Вывод векторов
    std::cout << "Вектор 1: (" << v1.x << ", " << v1.y << ")\n";
    std::cout << "Вектор 2: (" << v2.x << ", " << v2.y << ")\n";
    std::cout << "Вектор 3: (" << v3.x << ", " << v3.y << ")\n";

    // Длины векторов
    std::cout << "Длина Вектора 1: " << length(v1) << "\n";
    std::cout << "Длина Вектора 2: " << length(v2) << "\n";
    std::cout << "Длина Вектора 3: " << length(v3) << "\n";

    // Углы между векторами
    std::cout << "Угол между Вектором 1 и Вектором 2: " << angleBetween(v1, v2) << " градусов\n";
    std::cout << "Угол между Вектором 1 и Вектором 3: " << angleBetween(v1, v3) << " градусов\n";
    std::cout << "Угол между Вектором 2 и Вектором 3: " << angleBetween(v2, v3) << " градусов\n";

    // Суммы и разности векторов
    Vector2D sum12 = add(v1, v2), sum13 = add(v1, v3), sum23 = add(v2, v3);
    std::cout << "Сумма Вектора 1 и Вектора 2: (" << sum12.x << ", " << sum12.y << ")\n";
    std::cout << "Сумма Вектора 1 и Вектора 3: (" << sum13.x << ", " << sum13.y << ")\n";
    std::cout << "Сумма Вектора 2 и Вектора 3: (" << sum23.x << ", " << sum23.y << ")\n";

    Vector2D diff12 = subtract(v1, v2), diff13 = subtract(v1, v3), diff23 = subtract(v2, v3);
    std::cout << "Разность Вектора 1 и Вектора 2: (" << diff12.x << ", " << diff12.y << ")\n";
    std::cout << "Разность Вектора 1 и Вектора 3: (" << diff13.x << ", " << diff13.y << ")\n";
    std::cout << "Разность Вектора 2 и Вектора 3: (" << diff23.x << ", " << diff23.y << ")\n";

    // Проверка параллельности
    std::cout << "Вектор 1 и Вектор 2 параллельны? " << (areParallel(v1, v2) ? "Да" : "Нет") << "\n";
    std::cout << "Вектор 1 и Вектор 3 параллельны? " << (areParallel(v1, v3) ? "Да" : "Нет") << "\n";
    std::cout << "Вектор 2 и Вектор 3 параллельны? " << (areParallel(v2, v3) ? "Да" : "Нет") << "\n";

    return 0;
}

