# Райко Матвей Витальевич НБИбд-03-23.
# Лабораторная номер 4,Билет 12, Задание 4

"""
4. Реализовать на языках С++ и Python вычислительные алгоритмы поиска решений системы линейных алгебраических
уравнений методом прогонки. Система имеет следующий вид:
- 11x1+ 9x2 = -114,
x1- 8x2 + x3 = 81,
-2x2 - 11x3 + 5x4= -8,
3х3 - 14x4 + 7x5 = -38,
8x4 + 10x5 = 144.
"""

def solve_tridiagonal(a, b, c, d):
    n = len(d)
    alpha = [0] * n
    beta = [0] * n
    x = [0] * n
    
    # Прямой ход (forward sweep)
    alpha[1] = -c[0] / b[0]
    beta[1] = d[0] / b[0]
    
    for i in range(1, n-1):
        denom = b[i] + a[i] * alpha[i]
        alpha[i+1] = -c[i] / denom
        beta[i+1] = (d[i] - a[i] * beta[i]) / denom
    
    # Обратный ход (backward substitution)
    x[n-1] = (d[n-1] - a[n-1] * beta[n-1]) / (b[n-1] + a[n-1] * alpha[n-1])
    
    for i in range(n-2, -1, -1):
        x[i] = alpha[i+1] * x[i+1] + beta[i+1]
    
    return x

# Пример системы уравнений из задачи
a = [0, 1, -11, 0, 0]  # коэффициенты a_i
b = [-11, -8, -11, -14, 8]  # коэффициенты b_i
c = [0, 1, 5, 7, 10]  # коэффициенты c_i
d = [-114, 81, -8, -38, 144]  # правая часть системы

# Решение системы методом прогонки
solution = solve_tridiagonal(a, b, c, d)

# Вывод решения
print("Решение системы:")
for i, sol in enumerate(solution):
    print(f"x{i+1} = {sol}")

