# Райко Матвей Витальевич НБИбд-03-23.
# Лабораторная номер 4,Билет 12, Задание 3

"""
3. Реализовать на языках С++ и Python вычислительные алгоритмы поиска решений системы линейных алгебраических уравнений методом Зейделя с точностью до 0.01. Система имеет следующий вид:
14x1 - 4x2 - 2x3 + 3x4 = 38,
-3x1+ 23x2 - 6x3 - 9x4= -195,
-7x1 - 8x2 + 21x3 - 5x4,= -27,
-2x1－2x2+8x3+18x4=142
"""

import numpy as np

def solve_seidel(A, B, tolerance=0.01, max_iterations=1000):
    n = len(A)
    x = np.zeros(n)  # начальное приближение
    
    for _ in range(max_iterations):
        x_new = np.zeros(n)
        
        for i in range(n):
            sum1 = np.dot(A[i][:i], x_new[:i])  # сумма от первого элемента до i-1
            sum2 = np.dot(A[i][i+1:], x[i+1:])  # сумма от i+1 элемента до последнего
            x_new[i] = (B[i] - sum1 - sum2) / A[i][i]
        
        # проверка критерия остановки
        if np.linalg.norm(x_new - x) < tolerance:
            return x_new
        
        x = x_new
    
    print("Метод Зейделя не сошелся за {} итераций.".format(max_iterations))
    return x

# Задаем матрицу коэффициентов A и вектор правых частей B
A = np.array([[14, -4, -2, 3],
              [-3, 23, -6, -9],
              [-7, -8, 21, -5],
              [-2, -2, 8, 18]])

B = np.array([38, -195, -27, 142])

# Решаем систему методом Зейделя
solution = solve_seidel(A, B, tolerance=0.01)

# Выводим результаты
print("Решение СЛАУ методом Зейделя:", solution)

